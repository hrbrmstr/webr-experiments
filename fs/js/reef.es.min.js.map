{"version":3,"file":"reef.es.min.js","sources":["../src/components/utilities.js","../src/components/store.js","../src/components/setter.js","../src/components/render.js","../src/components/component.js"],"sourcesContent":["/**\n * Emit a custom event\n * @param  {String} type   The event type\n * @param  {*}      detail Any details to pass along with the event\n * @param  {Node}   elem   The element to emit the event on\n */\nfunction emit (type, detail, elem = document) {\n\n\t// Create a new event\n\tlet event = new CustomEvent(`reef:${type}`, {\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t\tdetail: detail\n\t});\n\n\t// Dispatch the event\n\treturn elem.dispatchEvent(event);\n\n}\n\n/**\n * Get the element from the UI\n * @param  {String|Node} elem The element or selector string\n * @return {Node}             The element\n */\nfunction getElem (elem) {\n\treturn typeof elem === 'string' ? document.querySelector(elem) : elem;\n}\n\n/**\n * Get an object's type\n * @param  {*}      obj The object\n * @return {String}     The type\n */\nfunction getType (obj) {\n\treturn Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\n\n/**\n * Create an immutable clone of data\n * @param  {*} obj The data object to copy\n * @return {*}     The clone of the array or object\n */\nfunction copy (obj) {\n\n\t/**\n\t * Create an immutable copy of an object\n\t * @return {Object}\n\t */\n\tfunction cloneObj () {\n\t\tlet clone = {};\n\t\tfor (let key in obj) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\tclone[key] = copy(obj[key]);\n\t\t\t}\n\t\t}\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Create an immutable copy of an array\n\t * @return {Array}\n\t */\n\tfunction cloneArr () {\n\t\treturn obj.map(function (item) {\n\t\t\treturn copy(item);\n\t\t});\n\t}\n\n\t// Get object type\n\tlet type = getType(obj);\n\n\t// Return a clone based on the object type\n\tif (type === 'object') return cloneObj();\n\tif (type === 'array') return cloneArr();\n\treturn obj;\n\n}\n\n\nexport {emit, getElem, getType, copy};","import {emit, getType} from './utilities.js';\n\n\n/**\n * Create a Proxy handler object\n * @param  {String} name The custom event namespace\n * @param  {Object} data The data object\n * @return {Object}      The handler object\n */\nfunction handler (name, data) {\n\tlet type = 'store' + (name ? `-${name}` : '');\n\treturn {\n\t\tget (obj, prop) {\n\t\t\tif (prop === '_isProxy') return true;\n\t\t\tif (['object', 'array'].includes(getType(obj[prop])) && !obj[prop]._isProxy) {\n\t\t\t\tobj[prop] = new Proxy(obj[prop], handler(name, data));\n\t\t\t}\n\t\t\treturn obj[prop];\n\t\t},\n\t\tset (obj, prop, value) {\n\t\t\tif (obj[prop] === value) return true;\n\t\t\tobj[prop] = value;\n\t\t\temit(type, data);\n\t\t\treturn true;\n\t\t},\n\t\tdeleteProperty (obj, prop) {\n\t\t\tdelete obj[prop];\n\t\t\temit(type, data);\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\n/**\n * Create a new store\n * @param  {Object} data The data object\n * @param  {String} name The custom event namespace\n * @return {Proxy}       The reactive proxy\n */\nfunction store (data = {}, name = '') {\n\tdata = ['array', 'object'].includes(getType(data)) ? data : {value: data};\n\treturn new Proxy(data, handler(name, data));\n}\n\n\nexport default store;","import {emit, copy} from './utilities.js';\n\n\n/**\n * Setter Class\n */\nclass Setter {\n\n\t/**\n\t * The constructor object\n\t * @param  {Node|String} elem     The element or selector to render the template into\n\t * @param  {Function}    template The template function to run when the data updates\n\t * @param  {Object}      options  Additional options\n\t */\n\tconstructor (data, setters, name = '') {\n\n\t\t// Get store type\n\t\tlet type = 'store' + (name ? `-${name}` : '');\n\n\t\t// Create data property setter/getter\n\t\tObject.defineProperties(this, {\n\t\t\tdata: {\n\t\t\t\tget () {\n\t\t\t\t\treturn copy(data);\n\t\t\t\t},\n\t\t\t\tset () {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Add setter functions\n\t\tfor (let fn in setters) {\n\t\t\tif (typeof setters[fn] !== 'function') continue;\n\t\t\tthis[fn] = function (...args) {\n\t\t\t\tsetters[fn](data, ...args);\n\t\t\t\temit(type, data);\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n\n/**\n * Create a new store\n * @param  {Object} data The data object\n * @param  {String} name The custom event namespace\n * @return {Proxy}       The reactive proxy\n */\nfunction setter (data = {}, setters = {}, name = '') {\n\treturn new Setter(data, setters, name);\n}\n\n\nexport default setter;","import {emit, getElem} from './utilities.js';\n\n\n// Form fields and attributes that can be modified by users\n// They also have implicit values that make it hard to know if they were changed by the user or developer\nlet formFields = ['input', 'option', 'textarea'];\nlet formAtts = ['value', 'checked', 'selected'];\nlet formAttsNoVal = ['checked', 'selected'];\n\n/**\n * Convert a template string into HTML DOM nodes\n * @param  {String} str The template string\n * @return {Node}       The template HTML\n */\nfunction stringToHTML (str) {\n\n    // Create document\n    let parser = new DOMParser();\n    let doc = parser.parseFromString(str, 'text/html');\n\n    // If there are items in the head, move them to the body\n    if (doc.head && doc.head.childNodes.length) {\n        Array.from(doc.head.childNodes).reverse().forEach(function (node) {\n            doc.body.insertBefore(node, doc.body.firstChild);\n        });\n    }\n\n    return doc.body || document.createElement('body');\n\n}\n\n/**\n * Check if an attribute string has a stringified falsy value\n * @param  {String}  str The string\n * @return {Boolean}     If true, value is falsy (yea, I know, that's a little confusing)\n */\nfunction isFalsy (str) {\n\treturn ['false', 'null', 'undefined', '0', '-0', 'NaN', '0n', '-0n'].includes(str);\n}\n\n/**\n * Check if attribute should be skipped (sanitize properties)\n * @param  {String}  name   The attribute name\n * @param  {String}  value  The attribute value\n * @param  {Boolean} events If true, inline events are allowed\n * @return {Boolean}        If true, skip the attribute\n */\nfunction skipAttribute (name, value, events) {\n\tlet val = value.replace(/\\s+/g, '').toLowerCase();\n\tif (['src', 'href', 'xlink:href'].includes(name)) {\n\t\tif (val.includes('javascript:') || val.includes('data:text/html')) return true;\n\t}\n\tif (!events && name.startsWith('on')) return true;\n}\n\n/**\n * Add an attribute to an element\n * @param {Node}   elem The element\n * @param {String} att  The attribute\n * @param {String} val  The value\n * @param  {Boolean} events If true, inline events are allowed\n */\nfunction addAttribute (elem, att, val, events) {\n\n\t// Sanitize dangerous attributes\n\tif (skipAttribute(att, val, events)) return;\n\n\t// If it's a form attribute, set the property directly\n\tif (formAtts.includes(att)) {\n\t\telem[att] = att === 'value' ? val : ' ';\n\t}\n\n\t// Update the attribute\n\telem.setAttribute(att, val);\n\n\n}\n\n/**\n * Remove an attribute from an element\n * @param {Node}   elem The element\n * @param {String} att  The attribute\n */\nfunction removeAttribute (elem, att) {\n\n\t// If it's a form attribute, remove the property directly\n\tif (formAtts.includes(att)) {\n\t\telem[att] = '';\n\t}\n\n\t// Remove the attribute\n\telem.removeAttribute(att);\n\n}\n\n/**\n * Compare the existing node attributes to the template node attributes and make updates\n * @param  {Node}    template The new template\n * @param  {Node}    existing The existing DOM node\n * @param  {Boolean} events   If true, inline events allowed\n */\nfunction diffAttributes (template, existing, events) {\n\n\t// If the node is not an element, bail\n\tif (template.nodeType !== 1) return;\n\n\t// Get attributes for the template and existing DOM\n\tlet templateAtts = template.attributes;\n\tlet existingAtts = existing.attributes;\n\n\t// Add and update attributes from the template into the DOM\n\tfor (let {name, value} of templateAtts) {\n\n\t\t// Skip [#*] attributes\n\t\tif (name.startsWith('#')) continue;\n\n\t\t// Skip user-editable form field attributes\n\t\tif (formAtts.includes(name) && formFields.includes(template.tagName.toLowerCase())) continue;\n\n\t\t// Convert [@*] names to their real attribute name\n\t\tlet attName = name.startsWith('@') ? name.slice(1) : name;\n\n\t\t// If its a no-value property and it's falsy remove it\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) {\n\t\t\tremoveAttribute(existing, attName);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Otherwise, add the attribute\n\t\taddAttribute(existing, attName, value, events);\n\n\t}\n\n\t// Remove attributes from the DOM that shouldn't be there\n\tfor (let {name, value} of existingAtts) {\n\n\t\t// If the attribute exists in the template, skip it\n\t\tif (templateAtts[name]) continue;\n\n\t\t// Skip user-editable form field attributes\n\t\tif (formAtts.includes(name) && formFields.includes(existing.tagName.toLowerCase())) continue;\n\n\t\t// Otherwise, remove it\n\t\tremoveAttribute(existing, name);\n\n\t}\n\n}\n\n/**\n * Add default attributes to a newly created element\n * @param  {Node} elem The element\n */\nfunction addDefaultAtts (elem, events) {\n\n\t// Only run on elements\n\tif (elem.nodeType !== 1) return;\n\n\t// Remove [@*] and [#*] attributes and replace them with the plain attributes\n\t// Remove unsafe HTML attributes\n\tfor (let {name, value} of elem.attributes) {\n\n\t\t// If the attribute should be skipped, remove it\n\t\tif (skipAttribute(name, value, events)) {\n\t\t\tremoveAttribute(elem, name);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If the attribute isn't a [@*] or [#*], skip it\n\t\tif (!name.startsWith('@') && !name.startsWith('#')) continue;\n\n\t\t// Get the plain attribute name\n\t\tlet attName = name.slice(1);\n\n\t\t// Remove the [@*] or [#*] attribute\n\t\tremoveAttribute(elem, name);\n\n\t\t// If it's a no-value attribute and its falsy, skip it\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) continue;\n\n\t\t// Add the plain attribute\n\t\taddAttribute(elem, attName, value, events);\n\n\t}\n\n\t// If there are child elems, recursively add defaults to them\n\tif (elem.childNodes) {\n\t\tfor (let node of elem.childNodes) {\n\t\t\taddDefaultAtts(node, events);\n\t\t}\n\t}\n\n}\n\n/**\n * Get the content from a node\n * @param  {Node}   node The node\n * @return {String}      The content\n */\nfunction getNodeContent (node) {\n\treturn node.childNodes && node.childNodes.length ? null : node.textContent;\n}\n\n/**\n * Check if two nodes are different\n * @param  {Node}  node1 The first node\n * @param  {Node}  node2 The second node\n * @return {Boolean}     If true, they're not the same node\n */\nfunction isDifferentNode (node1, node2) {\n\treturn (\n\t\t(typeof node1.nodeType === 'number' && node1.nodeType !== node2.nodeType) ||\n\t\t(typeof node1.tagName === 'string' && node1.tagName !== node2.tagName) ||\n\t\t(typeof node1.id === 'string' && node1.id !== node2.id) ||\n\t\t(typeof node1.src === 'string' && node1.src !== node2.src)\n\t);\n}\n\n/**\n * Check if the desired node is further ahead in the DOM existingNodes\n * @param  {Node}     node           The node to look for\n * @param  {NodeList} existingNodes  The DOM existingNodes\n * @param  {Integer}  index          The indexing index\n * @return {Integer}                 How many nodes ahead the target node is\n */\nfunction aheadInTree (node, existingNodes, index) {\n\treturn Array.from(existingNodes).slice(index + 1).find(function (branch) {\n\t\treturn !isDifferentNode(node, branch);\n\t});\n}\n\n/**\n * If there are extra elements in DOM, remove them\n * @param  {Array} existingNodes      The existing DOM\n * @param  {Array} templateNodes The template\n */\nfunction trimExtraNodes (existingNodes, templateNodes) {\n\tlet extra = existingNodes.length - templateNodes.length;\n\tif (extra < 1)  return;\n\tfor (; extra > 0; extra--) {\n\t\texistingNodes[existingNodes.length - 1].remove();\n\t}\n}\n\n/**\n * Remove scripts from HTML\n * @param  {Node}    elem The element to remove scripts from\n */\nfunction removeScripts (elem) {\n\tlet scripts = elem.querySelectorAll('script');\n\tfor (let script of scripts) {\n\t\tscript.remove();\n\t}\n}\n\n/**\n * Diff the existing DOM node versus the template\n * @param  {Array}   template The template HTML\n * @param  {Node}    existing The current DOM HTML\n * @param  {Boolean} events   If true, inline events allowed\n */\nfunction diff (template, existing, events) {\n\n\t// Get the nodes in the template and existing UI\n\tlet templateNodes = template.childNodes;\n\tlet existingNodes = existing.childNodes;\n\n\t// Don't inject scripts\n\tif (removeScripts(template)) return;\n\n\t// Loop through each node in the template and compare it to the matching element in the UI\n\ttemplateNodes.forEach(function (node, index) {\n\n\t\t// If element doesn't exist, create it\n\t\tif (!existingNodes[index]) {\n\t\t\tlet clone = node.cloneNode(true);\n\t\t\taddDefaultAtts(clone, events);\n\t\t\texisting.append(clone);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is, but it's not the same node type, insert the new node before the existing one\n\t\tif (isDifferentNode(node, existingNodes[index])) {\n\n\t\t\t// Check if node exists further in the tree\n\t\t\tlet ahead = aheadInTree(node, existingNodes, index);\n\n\t\t\t// If not, insert the node before the current one\n\t\t\tif (!ahead) {\n\t\t\t\tlet clone = node.cloneNode(true);\n\t\t\t\taddDefaultAtts(clone, events);\n\t\t\t\texistingNodes[index].before(clone);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, move it to the current spot\n\t\t\texistingNodes[index].before(ahead);\n\n\t\t}\n\n\t\t// If attributes are different, update them\n\t\tdiffAttributes(node, existingNodes[index], events);\n\n\t\t// Stop diffing if a native web component\n\t\tif (node.nodeName.includes('-')) return;\n\n\t\t// If content is different, update it\n\t\tlet templateContent = getNodeContent(node);\n\t\tif (templateContent && templateContent !== getNodeContent(existingNodes[index])) {\n\t\t\texistingNodes[index].textContent = templateContent;\n\t\t}\n\n\t\t// If there shouldn't be child nodes but there are, remove them\n\t\tif (!node.childNodes.length && existingNodes[index].childNodes.length) {\n\t\t\texistingNodes[index].innerHTML = '';\n\t\t\treturn;\n\t\t}\n\n\t\t// If DOM is empty and shouldn't be, build it up\n\t\t// This uses a document fragment to minimize reflows\n\t\tif (!existingNodes[index].childNodes.length && node.childNodes.length) {\n\t\t\tlet fragment = document.createDocumentFragment();\n\t\t\tdiff(node, fragment, events);\n\t\t\texistingNodes[index].appendChild(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are nodes within it, recursively diff those\n\t\tif (node.childNodes.length) {\n\t\t\tdiff(node, existingNodes[index], events);\n\t\t}\n\n\t});\n\n\t// If extra elements in DOM, remove them\n\ttrimExtraNodes(existingNodes, templateNodes);\n\n}\n\n/**\n * Render a template into the UI\n * @param  {Node|String} elem     The element or selector to render the template into\n * @param  {String}      template The template to render\n * @param  {Boolean}     events   If true, inline events allowed\n */\nfunction render (elem, template, events) {\n\tlet node = getElem(elem);\n\tlet html = stringToHTML(template);\n\tdiff(html, node, events);\n\temit('render', null, node);\n}\n\nexport default render;","import render from './render.js';\nimport {emit, getElem} from './utilities.js';\n\n\n/**\n * Create the event handler function\n * @param {Class} instance The instance\n */\nfunction createHandler (instance) {\n\treturn function handler (event) {\n\t\tinstance.render();\n\t};\n}\n\n/**\n * Component Class\n */\nclass Component {\n\n\t/**\n\t * The constructor object\n\t * @param  {Node|String} elem     The element or selector to render the template into\n\t * @param  {Function}    template The template function to run when the data updates\n\t * @param  {Object}      options  Additional options\n\t */\n\tconstructor (elem, template, options) {\n\n\t\t// Create instance properties\n\t\tthis.elem = elem;\n\t\tthis.template = template;\n\t\tthis.stores = options.stores ? options.stores.map((store) => `reef:store-${store}`) : ['reef:store'];\n\t\tthis.events = options.events;\n\t\tthis.handler = createHandler(this);\n\t\tthis.debounce = null;\n\n\t\t// Init\n\t\tthis.start();\n\n\t}\n\n\t/**\n\t * Start reactive data rendering\n\t */\n\tstart () {\n\t\tfor (let store of this.stores) {\n\t\t\tdocument.addEventListener(store, this.handler);\n\t\t}\n\t\tthis.render();\n\t\temit('start', null, getElem(this.elem));\n\t}\n\n\t/**\n\t * Stop reactive data rendering\n\t */\n\tstop () {\n\t\tfor (let store of this.stores) {\n\t\t\tdocument.removeEventListener(store, this.handler);\n\t\t}\n\t\temit('stop', null, getElem(this.elem));\n\t}\n\n\t/**\n\t * Render the UI\n\t */\n\trender () {\n\n\t\t// Cache instance\n\t\tlet self = this;\n\n\t\t// If there's a pending render, cancel it\n\t\tif (self.debounce) {\n\t\t\twindow.cancelAnimationFrame(self.debounce);\n\t\t}\n\n\t\t// Setup the new render to run at the next animation frame\n\t\tself.debounce = window.requestAnimationFrame(function () {\n\t\t\trender(self.elem, self.template(), self.events);\n\t\t});\n\n\t}\n\n}\n\n/**\n * Create a new listener\n * @param  {Node|String} elem     The element or selector to render the template into\n * @param  {Function}    template The template function to run when the data updates\n * @param  {Object}      options  Additional options\n */\nfunction component (elem, template, options = {}) {\n\treturn new Component(elem, template, options);\n}\n\n\nexport default component;"],"names":["emit","type","detail","elem","document","event","CustomEvent","bubbles","cancelable","dispatchEvent","getElem","querySelector","getType","obj","Object","prototype","toString","call","slice","toLowerCase","store","data","name","includes","value","Proxy","handler","get","prop","_isProxy","set","deleteProperty","Setter","[object Object]","setters","defineProperties","this","copy","clone","key","hasOwnProperty","cloneObj","map","item","fn","args","setter","formFields","formAtts","formAttsNoVal","isFalsy","str","skipAttribute","events","val","replace","startsWith","addAttribute","att","setAttribute","removeAttribute","addDefaultAtts","nodeType","attributes","attName","childNodes","node","getNodeContent","length","textContent","isDifferentNode","node1","node2","tagName","id","src","diff","template","existing","templateNodes","existingNodes","scripts","querySelectorAll","script","remove","removeScripts","forEach","index","cloneNode","append","ahead","Array","from","find","branch","aheadInTree","before","templateAtts","existingAtts","diffAttributes","nodeName","templateContent","fragment","createDocumentFragment","appendChild","innerHTML","extra","trimExtraNodes","render","doc","DOMParser","parseFromString","head","reverse","body","insertBefore","firstChild","createElement","stringToHTML","Component","options","instance","stores","debounce","start","addEventListener","removeEventListener","self","window","cancelAnimationFrame","requestAnimationFrame","component"],"mappings":"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"}